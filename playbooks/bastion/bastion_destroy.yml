---

- name: Cloud provider bastion destruction
  hosts: localhost
  connection: local
  gather_facts: no
  tags:
    - never
    - destroy
    - bastion_destroy

  tasks:

    # Include tasks for writing terraform vars to file as workaround for
    # https://github.com/ansible/ansible/issues/51687
    # TODO: Remove this task and the included_tasks file when
    # issue is fixed
    - name: "Include terraform tasks"
      vars:
        service_name: bastion
        tf_state: absent
        tf_vars:
          service_name: "{{ service_name }}"
          region_name: "{{ project_region[cloud_provider] }}"
          network_name: "{{ project_data['network']['name'] }}"
        tf_vars_all: "{{ tf_cred_data[cloud_provider] |
          combine(tf_vars) |
          combine(project_data['services'][service_name]) }}"
      include_tasks:
        file: "{{ inventory_dir |
          default(ansible_inventory_sources[0])
          }}/../tasks/terraform.yml"

    # TODO: Uncomment task when passing variables to terraform issue is fixed
    # https://github.com/ansible/ansible/issues/51687
    # - name: Destroy bastion cloud configuration resources
    #   vars:
    #     service_name: bastion
    #     tf_vars:
    #       service_name: "{{ service_name }}"
    #       region_name: "{{ project_region[cloud_provider] }}"
    #       network_name: "{{ project_data['network']['name'] }}"
    #     tf_vars_all: "{{ tf_cred_data[cloud_provider] |
    #       combine(tf_vars) |
    #       combine(project_data['services'][service_name]) }}"
    #   terraform:
    #     project_path: "{{ inventory_dir |
    #       default(ansible_inventory_sources[0])
    #       }}/../terraform/{{ cloud_provider }}/{{ service_name }}"
    #     state: absent
    #     lock: yes
    #     variables: "{{ tf_vars_all }}"
    #     backend_config: "{{ tf_backend_config[cloud_provider] }}"

      when:
        - cloud_provider is defined
        - cloud_provider == 'gcp'
