---

- name: Cloud provider base configuration creation
  hosts: localhost
  connection: local
  gather_facts: no
  tags:
    - create
    - base
    - base_create

  tasks:

    - name: GCP block
      block:

        # Use Ansible to create bucket for storing terraform remote state files
        # TODO: May move this to terraform as it's always showing "changed" - investigate why first
        # TODO: Probably move this to a "project init" area
        - name: Create terraform backend storage bucket
          gcp_storage_bucket:
            name: "{{ gcp_data['project_name'] }}-tfstate"
            location: "{{ project_region }}"
            versioning:
              enabled: yes
            project: "{{ gcp_data['project_name'] }}"
            auth_kind: "{{ gcp_data['auth_kind'] }}"
            service_account_file: "{{ gcp_data['cred_file'] | expanduser }}"
            state: present

        # Include tasks for writing terraform vars to file as workaround for
        # https://github.com/ansible/ansible/issues/51687
        # TODO: Remove this task and the included_tasks file when
        # issue is fixed
        - name: "Include terraform tasks"
          vars:
            service_name: base
            tf_state: present
            tf_vars:
              region_name: "{{ project_region }}"
              network_name: "{{ project_data['network']['name'] }}"
            tf_vars_all: "{{ tf_cred_data |
              combine(tf_vars) }}"
          include_tasks:
            file: "{{ inventory_dir |
              default(ansible_inventory_sources[0])
              }}/../tasks/terraform.yml"

        # TODO: Uncomment task when passing variables to terraform issue is fixed
        # https://github.com/ansible/ansible/issues/51687
        # - name: Deploy base cloud configuration resources
        #   vars:
        #     service_name: base
        #     tf_vars:
        #       region_name: "{{ project_region }}"
        #       network_name: "{{ project_data['network']['name'] }}"
        #     tf_vars_all: "{{ tf_cred_data |
        #       combine(tf_vars) }}"
        #   terraform:
        #     project_path: "{{ inventory_dir |
        #       default(ansible_inventory_sources[0])
        #       }}/../terraform/{{ cloud_provider }}/{{ service_name }}"
        #     state: present
        #     force_init: yes
        #     lock: yes
        #     variables: "{{ tf_vars_all }}"
        #     backend_config: "{{ tf_backend_config }}"
        #   register: tf_outputs

      when:
        - cloud_provider is defined
        - cloud_provider == 'gcp'

    # - name: Display Terraform outputs
    #   debug:
    #     msg: "{{ tf_outputs }}"

    - name: Display Terraform outputs
      debug:
        msg: "{{ item['value']['value'] }}"
      loop: "{{ tf_outputs['outputs'] | default({}) | dict2items }}"
      loop_control:
        label: "{{ item['key'] }}"
      when: not item['value']['sensitive']

  # TODO: necessary here?
  post_tasks:

    - name: Refresh inventory to ensure new instances exist in inventory
      meta: refresh_inventory
