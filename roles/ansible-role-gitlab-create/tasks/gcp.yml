---

- name: Include vars for cloud provider
  include_vars:
    file: "{{ cloud_provider }}.yml"
    name: "{{ cloud_provider }}"

- name: Dump gcp vars
  debug:
    var: gcp

- name: Create network
  gcp_compute_network:
    name: "{{ gcp['arena'] }}-network"
    auto_create_subnetworks: yes
    project: "{{ gcp['project'] }}"
    auth_kind: "{{ gcp['cred_kind'] }}"
    service_account_file: "{{ gcp['cred_file'] }}"
    scopes: "{{ gcp['scopes'] }}"
    state: present
  register: network

- name: Create firewall rules
  gcp_compute_firewall:
    name: "{{ gcp['arena'] }}-{{ fw_item['name'] }}"
    allowed: "{{ fw_item['allowed'] }}"
    source_ranges: "{{ fw_item['source_ranges'] | default(omit) }}"
    priority: "{{ fw_item['pri'] | default(omit) }}"
    network: "{{ network }}"
    project: "{{ gcp['project'] }}"
    auth_kind: "{{ gcp['cred_kind'] }}"
    service_account_file: "{{ gcp['cred_file'] }}"
    state: present
  loop: "{{ gcp['fw_data'] }}"
  loop_control:
    loop_var: fw_item

- name: Create external address
  gcp_compute_address:
    name: "{{ gcp['arena'] }}-address"
    region: "{{ gcp['region'] }}"
    project: "{{ gcp['project'] }}"
    auth_kind: "{{ gcp['cred_kind'] }}"
    service_account_file: "{{ gcp['cred_file'] }}"
    scopes: "{{ gcp['scopes'] }}"
    state: present
  register: address

- name: Create disk
  gcp_compute_disk:
    name: "{{ gcp['arena'] }}-disk"
    size_gb: 50
    source_image: "{{ gcp['source_image'] }}"
    zone: "{{ gcp['zone'] }}"
    project: "{{ gcp['project'] }}"
    auth_kind: "{{ gcp['cred_kind'] }}"
    service_account_file: "{{ gcp['cred_file'] }}"
    scopes: "{{ gcp['scopes'] }}"
    state: present
  register: disk

- name: Create instance
  gcp_compute_instance:
    name: "{{ gcp['arena'] }}-vm"
    machine_type: n1-standard-1
    disks:
      - auto_delete: true
        boot: true
        source: "{{ disk }}"
    network_interfaces:
      - network: "{{ network }}"
        access_configs:
          - name: 'External NAT'
            nat_ip: "{{ address }}"
            type: 'ONE_TO_ONE_NAT'
    metadata:
      ssh-keys: "{{ gcp['ssh_user'] }}:{{ lookup('file', gcp['ssh_pubkey']) }}"
    labels:
      ansible_group: "{{ gcp['arena'] }}"
    zone: "{{ gcp['zone'] }}"
    project: "{{ gcp['project'] }}"
    auth_kind: "{{ gcp['cred_kind'] }}"
    service_account_file: "{{ gcp['cred_file'] }}"
    scopes: "{{ gcp['scopes'] }}"
    state: present
  register: instance

- name: Debug instance
  debug:
    msg:
      - "{{ instance }}"
      - "{{ address }}"

- name: Wait for SSH to come up
  wait_for:
    host: "{{ address['address'] }}"
    port: 22
    delay: 10
    timeout: 60

- name: Wait for things to settle down
  wait_for:
    timeout: 10

