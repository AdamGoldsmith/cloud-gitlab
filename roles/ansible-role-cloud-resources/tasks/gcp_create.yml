---

# No harm creating a potentially existing network here;
# we need the registered output to use later
- name: Create network
  gcp_compute_network:
    name: "{{ project_data['network']['name'] }}-network"
    auto_create_subnetworks: yes
    project: "{{ gcp_data['project_name'] }}"
    auth_kind: "{{ gcp_data['auth_kind'] }}"
    service_account_file: "{{ gcp_data['cred_file'] }}"
    scopes: "{{ project_data['services'][service_name]['scopes'] }}"
    state: present
  register: network

- name: Create firewall rules
  gcp_compute_firewall:
    name: "{{ fw_item['name'] }}"
    description: "{{ fw_item['description'] | default(omit) }}"
    allowed: "{{ fw_item['allowed'] }}"
    source_ranges: "{{ fw_item['source_ranges'] | default(omit) }}"
    priority: "{{ fw_item['pri'] | default(omit) }}"
    network: "{{ network }}"
    project: "{{ gcp_data['project_name'] }}"
    auth_kind: "{{ gcp_data['auth_kind'] }}"
    service_account_file: "{{ gcp_data['cred_file'] }}"
    state: present
  loop: "{{ project_data['services'][service_name]['fw_data'] |
    default([]) }}"
  loop_control:
    loop_var: fw_item
    label: "{{ fw_item['name'] }}"

- name: Create external addresses
  gcp_compute_address:
    name: "{{ service_name }}-{{ address_item['name'] }}-address"
    region: "{{ project_region }}"
    project: "{{ gcp_data['project_name'] }}"
    auth_kind: "{{ gcp_data['auth_kind'] }}"
    service_account_file: "{{ gcp_data['cred_file'] }}"
    state: present
  register: addresses_ext
  loop: "{{ project_data['services'][service_name]['ext_addresses'] |
    default([]) }}"
  loop_control:
    loop_var: address_item
    label: "{{ service_name }}-{{ address_item['name'] }}-address"

- name: Create external addresses per instance
  gcp_compute_address:
    name: "{{ service_name }}-{{ address_item['name'] }}-address"
    region: "{{ project_region }}"
    project: "{{ gcp_data['project_name'] }}"
    auth_kind: "{{ gcp_data['auth_kind'] }}"
    service_account_file: "{{ gcp_data['cred_file'] }}"
    scopes: "{{ project_data['services'][service_name]['scopes'] }}"
    state: present
  register: addresses
  loop: "{{ project_data['services'][service_name]['instances'] |
    default([]) }}"
  loop_control:
    loop_var: address_item
    label: "{{ service_name }}-{{ address_item['name'] }}-address"
  when: address_item['create_external_ip'] | default(False) | bool

- name: Display external addresses
  debug:
    msg: "{{ address_item['address'] | default('') }}"
  loop: "{{ addresses_ext['results'] + addresses['results'] }} "
  loop_control:
    loop_var: address_item
    label: "{{ address_item['name'] | default('') }}"
  when: address_item['name'] | default('') | length

- name: Create disks
  gcp_compute_disk:
    name: "{{ service_name }}-{{ instance_item['name'] }}-disk"
    size_gb: "{{ instance_item['disk']['size_gb'] }}"
    source_image: "{{ instance_item['disk']['source_image'] }}"
    zone: "{{ instance_item['zone'] }}"
    project: "{{ gcp_data['project_name'] }}"
    auth_kind: "{{ gcp_data['auth_kind'] }}"
    service_account_file: "{{ gcp_data['cred_file'] }}"
    scopes: "{{ project_data['services'][service_name]['scopes'] }}"
    state: present
  register: disks
  loop: "{{ project_data['services'][service_name]['instances'] |
    default([]) }}"
  loop_control:
    loop_var: instance_item
    label: "{{ service_name }}-{{ instance_item['name'] }}-disk"

- name: Create instances without external IP addresses
  vars:
    disk_name: "{{ service_name }}-{{ instance_item['name'] }}-disk"
  gcp_compute_instance:
    name: "{{ service_name }}-{{ instance_item['name'] }}-vm"
    machine_type: "{{ instance_item['machine_type'] }}"
    disks:
      - auto_delete: true
        boot: true
        source: "{{ disks['results'] |
          selectattr('name', 'equalto', disk_name) | first }}"
    network_interfaces:
      - network: "{{ network }}"
    metadata:
      ssh-keys: "{{ gcp_data['ssh_user'] }}:\
        {{ lookup('file', gcp_data['ssh_pubkey']) }}"
    labels:
      ansible_group: "{{ service_name }}"
    zone: "{{ instance_item['zone'] }}"
    project: "{{ gcp_data['project_name'] }}"
    auth_kind: "{{ gcp_data['auth_kind'] }}"
    service_account_file: "{{ gcp_data['cred_file'] }}"
    scopes: "{{ project_data['services'][service_name]['scopes'] }}"
    state: present
  register: instances
  loop: "{{ project_data['services'][service_name]['instances'] |
    default([]) | rejectattr('create_external_ip') | list }}"
  loop_control:
    loop_var: instance_item
    label: "{{ service_name }}-{{ instance_item['name'] }}-vm"

- name: Create instances with external IP addresses
  vars:
    disk_name: "{{ service_name }}-{{ instance_item['name'] }}-disk"
    address_name: "{{ service_name }}-{{ instance_item['name'] }}-address"
  gcp_compute_instance:
    name: "{{ service_name }}-{{ instance_item['name'] }}-vm"
    machine_type: "{{ instance_item['machine_type'] }}"
    disks:
      - auto_delete: true
        boot: true
        source: "{{ disks['results'] |
          selectattr('name', 'equalto', disk_name) | first }}"
    network_interfaces:
      - network: "{{ network }}"
        access_configs:
          - name: 'External NAT'
            nat_ip: "{{ addresses['results'] | rejectattr('skipped', 'defined') |
              selectattr('name', 'equalto', address_name) | list | length |
              ternary(addresses['results'] | rejectattr('skipped', 'defined') |
              selectattr('name', 'equalto', address_name) | first, omit) }}"
            type: 'ONE_TO_ONE_NAT'
    metadata:
      ssh-keys: "{{ gcp_data['ssh_user'] }}:\
        {{ lookup('file', gcp_data['ssh_pubkey']) }}"
    labels:
      ansible_group: "{{ service_name }}"
    zone: "{{ instance_item['zone'] }}"
    project: "{{ gcp_data['project_name'] }}"
    auth_kind: "{{ gcp_data['auth_kind'] }}"
    service_account_file: "{{ gcp_data['cred_file'] }}"
    scopes: "{{ project_data['services'][service_name]['scopes'] }}"
    state: present
  register: instances_ext
  loop: "{{ project_data['services'][service_name]['instances'] |
    default([]) | selectattr('create_external_ip') | list }}"
  loop_control:
    loop_var: instance_item
    label: "{{ service_name }}-{{ instance_item['name'] }}-vm"

- name: Target pool block
  block:

    - name: Create target pools
      gcp_compute_target_pool:
        name: "{{ service_name }}-{{ tp_item['name'] }}-target-pool"
        region: "{{ project_region }}"
        project: "{{ gcp_data['project_name'] }}"
        auth_kind: "{{ gcp_data['auth_kind'] }}"
        service_account_file: "{{ gcp_data['cred_file'] }}"
        # Only pooling internal instances
        instances: "{{ instances['results'] }}"
        state: present
      register: targetpools
      loop: "{{ project_data['services'][service_name]['target_pool_data'] |
          default([]) }}"
      loop_control:
        loop_var: tp_item
        label: "{{ service_name }}-{{ tp_item['name'] }}-target-pool"

    - name: Gather external address information
      gcp_compute_address_info:
        filters:
          - "name = {{ tp_item['address']['service'] }}-{{ tp_item['address']['name'] }}-address"
        region: "{{ project_region }}"
        project: "{{ gcp_data['project_name'] }}"
        auth_kind: "{{ gcp_data['auth_kind'] }}"
        service_account_file: "{{ gcp_data['cred_file'] }}"
      register: tp_addresses
      loop: "{{ project_data['services'][service_name]['target_pool_data'] |
          default([]) }}"
      loop_control:
        loop_var: tp_item
        label: "{{ tp_item['address']['service'] }}-{{ tp_item['address']['name'] }}-address"

    - name: Gather network info
      gcp_compute_network_info:
        filters:
          - "name = {{ project_data['network']['name'] }}-network"
        project: "{{ gcp_data['project_name'] }}"
        auth_kind: "{{ gcp_data['auth_kind'] }}"
        service_account_file: "{{ gcp_data['cred_file'] }}"
      register: network

    - name: Create forwarding rules
      gcp_compute_forwarding_rule:
        name: "{{ service_name }}-{{ tp_item['name'] }}-forwarding-rule"
        region: "{{ project_region }}"
        project: "{{ gcp_data['project_name'] }}"
        auth_kind: "{{ gcp_data['auth_kind'] }}"
        service_account_file: "{{ gcp_data['cred_file'] }}"
        network: "{{ network }}"
        target: "{{ targetpools['results'] |
          selectattr('tp_item.name', 'equalto', tp_item['name']) |
          list | first }}"
        ip_protocol: "{{ tp_item['ip_protocol'] }}"
        port_range: "{{ tp_item['port_range'] }}"
        ip_address: "{{ tp_addresses['results'] |
          selectattr('tp_item.name', 'equalto', tp_item['name']) |
          map(attribute='resources') | list | first |
          map(attribute='address') | list | first }}"
        state: present
      loop: "{{ project_data['services'][service_name]['target_pool_data'] |
          default([]) }}"
      loop_control:
        loop_var: tp_item
        label: "{{ service_name }}-{{ tp_item['name'] }}-forwarding-rule"

  when: project_data['services'][service_name]['target_pool_data'] is defined
